//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0[7];                     // Offset:    0 Size:   112
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// s0_s                              sampler      NA          NA             s0      1 
// t0                                texture  float4          2d             t0      1 
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
add r0.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r0.x, r0.xyxx, r0.xyxx
mul r0.x, r0.x, l(0.870000)
sqrt r0.x, r0.x
mad r0.y, r0.x, l(6.560000), l(-1.000000)
add r0.x, r0.x, r0.x
lt r0.x, r0.x, cb0[0].x
mul r0.y, r0.y, l(4.321928)
exp r0.y, r0.y
mad r0.y, r0.y, l(500.000000), l(-250.000000)
mul r0.y, r0.y, l(0.001000)
round_ni r0.y, r0.y
mad r0.y, r0.y, l(1000.000000), l(250.000000)
add r0.z, -cb0[6].y, l(1.000000)
div r0.z, r0.z, cb0[6].y
mad r0.y, r0.z, l(1000.000000), r0.y
mul r1.x, cb0[0].z, cb0[5].w
mul r1.yz, cb0[0].zzxz, cb0[0].yyxy
mul r1.xyw, r1.xyxz, l(1000.000000, 1000.000000, 0.000000, 0.297025)
div r0.z, r1.x, r1.y
ge r0.w, r0.z, -r0.z
frc r0.z, |r0.z|
movc r0.z, r0.w, r0.z, -r0.z
mad r0.z, r0.z, r1.y, l(250.000000)
add r0.y, r0.z, -r0.y
mul r0.y, |r0.y|, l(0.001000)
round_ni r0.y, r0.y
mad_sat r0.y, -r0.y, cb0[6].y, l(1.000000)
dp2 r0.y, r0.yyyy, cb0[6].xxxx
max r0.y, r0.y, l(0.250000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
lt r0.z, l(0.010000), r2.w
and r0.z, r0.z, l(0x3f800000)
mul r3.xyz, r0.zzzz, r2.xyzx
mul r3.xyz, r3.xyzx, cb0[3].wwww
mul r2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r3.xyz, r0.yyyy, r2.xyzx
mul r4.w, r0.y, r2.w
mul r4.xyz, r3.xyzx, l(6.150000, 4.190000, 1.680000, 0.000000)
movc r0.xyzw, r0.xxxx, r4.xyzw, r2.xyzw
add_sat r1.x, r0.w, l(0.003000)
add r1.x, -r0.w, r1.x
mul r1.y, cb0[4].y, cb0[4].y
mul r1.y, r1.z, r1.y
mad r2.xz, v1.xxyx, l(1.000000, 0.000000, -1.000000, 0.000000), l(-0.500000, 0.000000, 0.500000, 0.000000)
mov r2.y, l(0)
add r2.xyz, r2.xyzx, -v0.xyzx
dp3 r1.z, r2.xyzx, r2.xyzx
ge r1.y, r1.y, r1.z
mad r2.xy, v1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
dp2 r1.z, r2.xyxx, r2.xyxx
ge r1.z, r1.w, r1.z
and r1.yz, r1.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
min r1.y, r1.y, r1.z
mad r0.w, r1.y, r1.x, r0.w
lt r1.x, l(0.100000), r0.w
mad r2.xyz, cb0[5].xyzx, l(100.000000, 100.000000, 100.000000, 0.000000), -r0.xyzx
mad r0.xyz, r1.yyyy, r2.xyzx, r0.xyzx
mul r1.yzw, r0.yyyy, cb0[2].xxyz
mad r1.yzw, r0.xxxx, cb0[1].xxyz, r1.yyzw
mad r2.xyz, r0.zzzz, cb0[3].xyzx, r1.yzwy
lt r0.x, l(0.500000), r1.z
mul r3.y, r0.w, cb0[4].x
lt r0.y, r0.w, l(0.100000)
mov r2.w, r3.y
add r3.x, r2.y, r2.x
mov r3.z, l(0.600001)
mul r4.xyzw, r3.zxxy, l(0.000000, 0.100878, 0.171420, 1.000000)
movc r1.xyzw, r1.xxxx, r4.xyzw, r2.xyzw
mov r3.w, r1.w
mul r4.xyzw, r3.xxxw, l(0.047917, 0.100878, 0.591422, 1.000000)
movc r1.xyzw, r0.yyyy, r4.xyzw, r1.xyzw
mov r3.w, r1.w
mul r3.xyzw, r3.xxxw, l(0.107918, 0.100878, 0.591423, 1.000000)
movc r0.xyzw, r0.xxxx, r3.xyzw, r1.xyzw
ld_indexable(texture1d)(float,float,float,float) r1.x, l(6, 0, 0, 0), t120.wxyz
eq r1.x, r1.x, l(1.000000)
movc r0.xyzw, r1.xxxx, r0.xyzw, r2.xyzw
mul r1.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r0.xyzw, r0.xyzw, l(0.800800, 0.800800, 0.800800, 0.800800)
ld_indexable(texture1d)(float,float,float,float) r2.x, l(7, 0, 0, 0), t120.wxyz
eq r3.xyzw, r2.xxxx, l(4.000000, 3.000000, 2.000000, 1.000000)
eq r2.x, r2.x, l(0.000000)
movc r0.xyzw, r3.xxxx, r0.xyzw, r1.xyzw
mul r1.xyzw, r0.xyzw, l(0.600000, 0.600000, 0.600000, 0.600000)
movc r0.xyzw, r3.yyyy, r1.xyzw, r0.xyzw
mul r1.xyzw, r0.xyzw, l(0.400000, 0.400000, 0.400000, 0.400000)
movc r0.xyzw, r3.zzzz, r1.xyzw, r0.xyzw
mul r1.xyzw, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
movc r0.xyzw, r3.wwww, r1.xyzw, r0.xyzw
movc o0.xyzw, r2.xxxx, l(0,0,0,0), r0.xyzw
ret 
// Approximately 92 instruction slots used
