//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0[2];                     // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// IniParams                         texture  float4          1d           t120      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xyz 
// TEXCOORD                 1   xy          1     NONE   float   xy  
// SV_Position              0   xyzw        2      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture1d (float,float,float,float) t120
dcl_input_ps linear v0.xyz
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
dp2 r0.x, v1.xyxx, v1.xyxx
sqrt r0.x, r0.x
mad r0.x, r0.x, l(6.560000), l(-1.000000)
mul r0.x, r0.x, l(3.321928)
exp r0.x, r0.x
add r0.y, -cb0[1].z, l(1.000000)
div r0.y, r0.y, cb0[1].z
mul r0.y, r0.y, l(1000.000000)
mad r0.x, r0.x, l(500.000000), r0.y
mul r1.x, cb0[0].z, cb0[1].x
mul r1.y, cb0[0].z, cb0[0].y
mul r0.yz, r1.xxyx, l(0.000000, 1000.000000, 1000.000000, 0.000000)
div r0.y, r0.y, r0.z
ge r0.w, r0.y, -r0.y
frc r0.y, |r0.y|
movc r0.y, r0.w, r0.y, -r0.y
mad r0.y, r0.y, r0.z, l(250.000000)
add r0.x, r0.y, -r0.x
mul r0.x, |r0.x|, cb0[1].z
mad_sat r0.x, r0.x, l(-0.001000), l(1.000000)
mad_sat r0.x, r0.x, cb0[1].y, l(0.150000)
mul r0.w, r0.x, cb0[0].w
ld_indexable(texture1d)(float,float,float,float) r1.x, l(6, 0, 0, 0), t120.wxyz
eq r1.x, r1.x, l(1.000000)
mul r1.yzw, v0.xxyz, cb0[0].xxxx
mul r1.yzw, r1.yyzw, l(0.000000, 3.000000, 3.000000, 3.000000)
add r2.x, r1.z, r1.y
mul r2.xyz, r2.xxxx, l(0.069757, 0.069757, 0.069757, 0.000000)
movc r0.xyz, r1.xxxx, r2.xyzx, r1.yzwy
mul r1.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r0.xyzw, r0.xyzw, l(0.800800, 0.800800, 0.800800, 0.800800)
ld_indexable(texture1d)(float,float,float,float) r2.x, l(7, 0, 0, 0), t120.wxyz
eq r3.xyzw, r2.xxxx, l(4.000000, 3.000000, 2.000000, 1.000000)
eq r2.x, r2.x, l(0.000000)
movc r0.xyzw, r3.xxxx, r0.xyzw, r1.xyzw
mul r1.xyzw, r0.xyzw, l(0.600000, 0.600000, 0.600000, 0.600000)
movc r0.xyzw, r3.yyyy, r1.xyzw, r0.xyzw
mul r1.xyzw, r0.xyzw, l(0.400000, 0.400000, 0.400000, 0.400000)
movc r0.xyzw, r3.zzzz, r1.xyzw, r0.xyzw
mul r1.xyzw, r0.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
movc r0.xyzw, r3.wwww, r1.xyzw, r0.xyzw
movc o0.xyzw, r2.xxxx, l(0,0,0,0), r0.xyzw
ret 
// Approximately 43 instruction slots used
